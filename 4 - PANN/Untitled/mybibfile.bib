@Article{GroupMethodData2020,
  title = {Group Method of Data Handling},
  year = {2020},
  month = {jan},
  abstract = {Group method of data handling (GMDH) is a family of inductive algorithms for computer-based mathematical modeling of multi-parametric datasets that features fully automatic structural and parametric optimization of models.
GMDH is used in such fields as data mining, knowledge discovery, prediction, complex systems modeling, optimization and pattern recognition. GMDH algorithms are characterized by inductive procedure that performs sorting-out of gradually complicated polynomial  models and selecting the best solution by means of the external criterion.
A GMDH model with multiple inputs and one output is a subset of components of the base function (1):

  
    
      
        Y
        (
        
          x
          
            1
          
        
        ,
        \ldots{}
        ,
        
          x
          
            n
          
        
        )
        =
        
          a
          
            0
          
        
        +
        
          {$\sum$}
          
            i
            =
            1
          
          
            m
          
        
        
          a
          
            i
          
        
        
          f
          
            i
          
        
      
    
    \{\textbackslash{}displaystyle Y(x\_\{1\},\textbackslash{}dots ,x\_\{n\})=a\_\{0\}+\textbackslash{}sum \textbackslash{}limits \_\{i=1\}\^\{m\}a\_\{i\}f\_\{i\}\}
  where f are elementary functions dependent on different sets of inputs, a are coefficients  and m is the number of the base function components.
In order to find the best solution GMDH algorithms consider various component subsets of the base function (1) called partial models. Coefficients of these models are estimated by the least squares method. GMDH algorithms gradually increase the number of partial model components and find a model structure with optimal complexity indicated by the minimum value of an external criterion. This process is called self-organization of models.
As the first base function used in GMDH, was the gradually complicated Kolmogorov\textendash{}Gabor polynomial (2):

  
    
      
        Y
        (
        
          x
          
            1
          
        
        ,
        \ldots{}
        ,
        
          x
          
            n
          
        
        )
        =
        
          a
          
            0
          
        
        +
        
          {$\sum$}
          
            i
            =
            1
          
          
            n
          
        
        
          
            a
            
              i
            
          
        
        
          x
          
            i
          
        
        +
        
          {$\sum$}
          
            i
            =
            1
          
          
            n
          
        
        
          
            {$\sum$}
            
              j
              =
              i
            
            
              n
            
          
          
            
              a
              
                i
                j
              
            
          
        
        
          x
          
            i
          
        
        
          x
          
            j
          
        
        +
        
          {$\sum$}
          
            i
            =
            1
          
          
            n
          
        
        
          
            {$\sum$}
            
              j
              =
              i
            
            
              n
            
          
          
            
              {$\sum$}
              
                k
                =
                j
              
              
                n
              
            
            
              
                a
                
                  i
                  j
                  k
                
              
            
          
        
        
          x
          
            i
          
        
        
          x
          
            j
          
        
        
          x
          
            k
          
        
        +
        {$\cdots$}
      
    
    \{\textbackslash{}displaystyle Y(x\_\{1\},\textbackslash{}dots ,x\_\{n\})=a\_\{0\}+\textbackslash{}sum \textbackslash{}limits \_\{i=1\}\^\{n\}\{a\_\{i\}\}x\_\{i\}+\textbackslash{}sum \textbackslash{}limits \_\{i=1\}\^\{n\}\{\textbackslash{}sum \textbackslash{}limits \_\{j=i\}\^\{n\}\{a\_\{ij\}\}\}x\_\{i\}x\_\{j\}+\textbackslash{}sum \textbackslash{}limits \_\{i=1\}\^\{n\}\{\textbackslash{}sum \textbackslash{}limits \_\{j=i\}\^\{n\}\{\textbackslash{}sum \textbackslash{}limits \_\{k=j\}\^\{n\}\{a\_\{ijk\}\}\}\}x\_\{i\}x\_\{j\}x\_\{k\}+\textbackslash{}cdots \}
  Usually more simple partial models with up to second degree functions are used.The inductive algorithms are also known as polynomial neural networks. J{\"u}rgen Schmidhuber cites GMDH as one of the first deep learning methods, remarking that it was used to train eight-layer neural nets as early as 1971.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  file = {D\:\\Jassiel\\Documents\\OneDrive 2\\OneDrive - Universidad La Salle, A.C\\Documentos\\zotero\\storage\\NHUGGUT3\\index.html},
  journal = {Wikipedia},
  language = {en},
  note = {Page Version ID: 933936835},
}
@Article{zjavkaDifferentialPolynomialNeural2011,
  title = {Differential {{Polynomial Neural Network}}},
  author = {L. Zjavka},
  year = {2011},
  month = {jan},
  volume = {4},
  pages = {89--99},
  issn = {19945450},
  doi = {10.3923/jai.2011.89.99},
  file = {D\:\\Jassiel\\Documents\\OneDrive 2\\OneDrive - Universidad La Salle, A.C\\Documentos\\zotero\\storage\\KFEESVGQ\\Zjavka - 2011 - Differential Polynomial Neural Network.pdf},
  journal = {Journal of Artificial Intelligence},
  number = {1},
}
@Misc{gomez-ramirezRedNeuronalArtificial2005,
  title = {{Red Neuronal Artificial Polinomial}},
  author = {Eduardo G{\a'o}mez-Ram\'irez},
  year = {2005},
  month = {apr},
  address = {{Universidad La Salle}},
  language = {Espa{\~n}ol},
}
@Misc{UCIMachineLearning,
  title = {{{UCI Machine Learning Repository}}: {{Ozone Level Detection Data Set}}},
  file = {C\:\\Users\\yolti\\Zotero\\storage\\S5BDGKAT\\Ozone+Level+Detection.html},
  howpublished = {https://archive.ics.uci.edu/ml/datasets/Ozone+Level+Detection},
}
@InProceedings{gomez-ramirezAdaptiveArchitecturePolynomial1999,
  title = {Adaptive Architecture of Polynomial Artificial Neural Network to Forecast Nonlinear Time Series},
  booktitle = {Proceedings of the 1999 {{Congress}} on {{Evolutionary Computation}}-{{CEC99}} ({{Cat}}. {{No}}. {{99TH8406}})},
  author = {E. Gomez-Ramirez and A. Poznyak and A. Gonzalez-Yunes and M. Avila-Alvarez},
  year = {1999},
  pages = {317--324},
  publisher = {{IEEE}},
  address = {{Washington, DC, USA}},
  doi = {10.1109/CEC.1999.781942},
  isbn = {978-0-7803-5536-1},
}
@Article{ivakhnenkoPolynomialTheoryComplex1971,
  title = {Polynomial {{Theory}} of {{Complex Systems}}},
  author = {A. G. Ivakhnenko},
  year = {1971},
  month = {oct},
  volume = {SMC-1},
  pages = {364--378},
  issn = {0018-9472, 2168-2909},
  doi = {10.1109/TSMC.1971.4308320},
  file = {C\:\\Users\\yolti\\Zotero\\storage\\PCPLM46W\\Ivakhnenko - 1971 - Polynomial Theory of Complex Systems.pdf},
  journal = {IEEE Transactions on Systems, Man, and Cybernetics},
  number = {4},
}
